<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>